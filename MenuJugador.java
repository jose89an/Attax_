import javax.swing.*;
import java.awt.*;
/**
 * <p>Clase derivada de JPanel que gestiona el menú de introducción del jugador para iniciar la partida</p>
 * @author  Jose y Alberto
 */
public class MenuJugador extends javax.swing.JPanel {
    
    private TableroGrafico tableroasociado;
    private String nick;
    private String password;
    
    /** Creates new form MenuJugador */
    public MenuJugador(TableroGrafico tableroasociado) {
        this.tableroasociado=tableroasociado;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTextNick = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jLabelCont = new javax.swing.JLabel();
        jLabelNick = new javax.swing.JLabel();
        jButtonJugar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonMP = new javax.swing.JButton();
        jButtonCargar = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 0, 0));

        jLabelCont.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelCont.setForeground(new java.awt.Color(255, 153, 0));
        jLabelCont.setText("Contrase\u00f1a:");

        jLabelNick.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelNick.setForeground(new java.awt.Color(255, 153, 0));
        jLabelNick.setText("Nick:");

        jButtonJugar.setText("Jugar");
        jButtonJugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonJugarMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 1, 30));
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Men\u00fa de Jugador");

        jButtonMP.setText("Men\u00fa Principal");
        jButtonMP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMPMouseClicked(evt);
            }
        });

        jButtonCargar.setText("Cargar Partida");
        jButtonCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCargarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelNick)
                            .addComponent(jLabelCont))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextNick, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jButtonJugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCargar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNick)
                            .addComponent(jTextNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCont))
                .addGap(42, 42, 42)
                .addComponent(jButtonJugar)
                .addGap(16, 16, 16)
                .addComponent(jButtonCargar)
                .addGap(14, 14, 14)
                .addComponent(jButtonMP)
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCargarMouseClicked
        nick=jTextNick.getText();
        password=new String(jPassword.getPassword());
        if(!tableroasociado.devolverColectortableros().existirTablero(nick)){
            JOptionPane.showMessageDialog(tableroasociado, "No existe ningún tablero guardado con este nick");
        }
        else {
            Jugador p=tableroasociado.devolverColectorjugador().devolverJugador(nick);
            TableroLogico t=tableroasociado.devolverColectortableros().devolverTablero(nick);
            if((p.devolverPassword()).compareTo(password)==0){
                tableroasociado.getContentPane().removeAll();
                tableroasociado.modificarPanelt(new PanelTablero(7,7,t,tableroasociado,false,p,new Jugador()));
                tableroasociado.devolverColectortableros().eliminarTablero(nick);
                tableroasociado.getContentPane().add(tableroasociado.devolverPanelt());
                tableroasociado.cambiarNickTL(nick);
                tableroasociado.setBackground(Color.GRAY);
                tableroasociado.pack();
                tableroasociado.devolverPanelt().updateUI();
            }
            else{
                JOptionPane.showMessageDialog(tableroasociado, "La contraseña introducida no es correcta");
            }
        }
    }//GEN-LAST:event_jButtonCargarMouseClicked

    private void jButtonMPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMPMouseClicked
        tableroasociado.getContentPane().removeAll();
        tableroasociado.modificarMenup(new MenuPrincipal(tableroasociado));
        tableroasociado.getContentPane().add(tableroasociado.devolverMenup());
        tableroasociado.pack();
        tableroasociado.devolverMenup().updateUI();
    }//GEN-LAST:event_jButtonMPMouseClicked

    private void jButtonJugarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJugarMouseClicked
        nick=jTextNick.getText();
        password=new String(jPassword.getPassword());
        if(!tableroasociado.devolverColectorjugador().existirJugador(nick)){
            JOptionPane.showMessageDialog(tableroasociado, "No existe ningún jugador con este nick");
        }
        else {
            Jugador p=tableroasociado.devolverColectorjugador().devolverJugador(nick);
            if((p.devolverPassword()).compareTo(password)==0){
                tableroasociado.getContentPane().removeAll();
                tableroasociado.modificarPanelt(new PanelTablero(7,7,new TableroLogico(),tableroasociado,false,p,new Jugador()));
                tableroasociado.getContentPane().add(tableroasociado.devolverPanelt());
                tableroasociado.cambiarNickTL(nick);
                tableroasociado.setBackground(Color.GRAY);
                tableroasociado.pack();
                tableroasociado.devolverPanelt().updateUI();
            }
            else{
                JOptionPane.showMessageDialog(tableroasociado, "La contraseña introducida no es correcta");
            }
        }
    }//GEN-LAST:event_jButtonJugarMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCargar;
    private javax.swing.JButton jButtonJugar;
    private javax.swing.JButton jButtonMP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCont;
    private javax.swing.JLabel jLabelNick;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jTextNick;
    // End of variables declaration//GEN-END:variables
    
}
